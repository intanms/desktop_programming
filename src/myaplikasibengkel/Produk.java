/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myaplikasibengkel;

import java.awt.GridLayout;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author liza
 */
public class Produk extends javax.swing.JFrame {

    /**
     * Creates new form Produk
     */
    public Produk() {
        initComponents();
        loadTabelProduk();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbProduk = new javax.swing.JTable();
        btnTambah = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtCari = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Produk");
        setLocation(new java.awt.Point(800, 0));

        tbProduk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nama Produk", "Harga", "Modal"
            }
        ));
        jScrollPane1.setViewportView(tbProduk);

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        jLabel1.setText("Cari:");

        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });
        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCariKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTambah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambah)
                    .addComponent(btnUbah)
                    .addComponent(btnHapus)
                    .addComponent(jLabel1)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
       
        JTextField txtNama = new JTextField(15);
        JTextField txtHarga = new JTextField(15);
        JTextField txtModal = new JTextField(15);
        
        JPanel myPanel = new JPanel();
        myPanel.setLayout(new GridLayout(3,3,0,16));
        myPanel.add(new JLabel("Nama Produk"));
        myPanel.add(txtNama);
        myPanel.add(new JLabel("Harga"));
        myPanel.add(txtHarga);
        myPanel.add(new JLabel("Modal"));
        myPanel.add(txtModal);
        
        int result = JOptionPane.showConfirmDialog(this, myPanel, "Input produk baru", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        
        if (result == JOptionPane.OK_OPTION){
            try{
                String sql = "INSERT INTO produk(nm_produk,harga_produk,modal_produk)" + " VALUES (? , ? ,? ) ; ";
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setString(1,  txtNama.getText() );
                stmt.setString(2, txtHarga.getText() );
                stmt.setString(3, txtModal.getText());
                
                stmt.executeUpdate();
                loadTabelProduk();
            } catch (SQLException e){
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    int selectedID;
    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        if(tbProduk.isRowSelected(tbProduk.getSelectedRow())==true){
            selectedID = (int)tbProduk.getValueAt(tbProduk.getSelectedRow(), 0);
            JTextField txtNama = new JTextField(15);
            JTextField txtHarga = new JTextField(15);
            JTextField txtModal = new JTextField(15);
            txtNama.setText(tbProduk.getValueAt(tbProduk.getSelectedRow(), 1).toString());
            txtHarga.setText(tbProduk.getValueAt(tbProduk.getSelectedRow(), 2).toString());
            txtModal.setText(tbProduk.getValueAt(tbProduk.getSelectedRow(), 3).toString());
            JPanel myPanel = new JPanel();
            myPanel.setLayout(new GridLayout(3,3,0,10));
            myPanel.add(new JLabel("Nama Produk"));
            myPanel.add(txtNama);
            myPanel.add(new JLabel("Harga"));
            myPanel.add(txtHarga);
            myPanel.add(new JLabel("Modal"));
            myPanel.add(txtModal);

            int result = JOptionPane.showConfirmDialog(this, myPanel, "Ubah produk", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

            if (result == JOptionPane.OK_OPTION){
                try{
                    String sql = "UPDATE produk SET nm_produk= ? , harga_produk= ? , modal_produk= ? WHERE id_produk= ? ; ";
                    PreparedStatement stmt = conn.prepareStatement(sql);
                    stmt.setString(1, txtNama.getText() );
                    stmt.setString(2, txtHarga.getText());
                    stmt.setString(3, txtModal.getText());
                    stmt.setInt(4, selectedID);
                    stmt.executeUpdate();
                    loadTabelProduk();
                } catch (SQLException e){
                    System.out.println(e.getMessage());
                }
            }
            } else {
            JOptionPane.showMessageDialog(this, "Tidak ada yang dipilih");
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        if(tbProduk.isRowSelected(tbProduk.getSelectedRow())==true){
            selectedID = (int)tbProduk.getValueAt(tbProduk.getSelectedRow(), 0);
            
            int result = JOptionPane.showConfirmDialog(this, "Kamu akan menghapus data " + tbProduk.getValueAt(tbProduk.getSelectedRow(), 1).toString(), "Peringatan!", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            
            if (result == JOptionPane.YES_OPTION){
                try{
                    String sql = "DELETE FROM produk WHERE id_produk= ? ";
                    PreparedStatement stmt = conn.prepareStatement(sql);
                    stmt.setInt(1, selectedID);
                    stmt.executeUpdate();
                    loadTabelProduk();
                } catch (SQLException e){
                    System.out.println(e.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Tidak ada yang dipilih");
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyPressed
         String cari = txtCari.getText();
         int l = cari.length();
         if ( (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'  ||evt.getKeyChar() >= 'a' && evt.getKeyChar() <= 'z' )&& l < 9||evt.getKeyChar() == KeyEvent.VK_ENTER || evt.getKeyChar() == KeyEvent.VK_BACK_SPACE || evt.getKeyChar() == KeyEvent.VK_DELETE)
         {
            String teks = txtCari.getText();
            loadTabelProduk(teks);
        } else{
             if( l == 9){
                 JOptionPane.showMessageDialog(this, "Nama Produk tidak valid");
                    }else
             {
                    JOptionPane.showMessageDialog(this, "Nama Produk terdiri dari angka dan huruf");
             }
         }
    }//GEN-LAST:event_txtCariKeyPressed

    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Produk().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbProduk;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables

Connection conn = Koneksi.connectDB();
    public void loadTabelProduk(){
        String sql = "SELECT * FROM produk";
        Object[] kolom = {"ID", "Nama Produk", "Harga", "Modal"};
        DefaultTableModel dataModel = new DefaultTableModel(null, kolom);
        tbProduk.setModel(dataModel);
        tbProduk.getColumnModel().getColumn(0).setMaxWidth(30);
        
        try{
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            
            while(rs.next()){               
                int id = rs.getInt("id_produk");
                String nama = rs.getString("nm_produk");
                String harga = rs.getString("harga_produk");
                String modal = rs.getString("modal_produk");
            
                Object[] data={id, nama, harga, modal};
                dataModel.addRow(data);
            }
        } catch (SQLException e){
            System.out.println(e.getMessage());
        }
    }

    public void loadTabelProduk(String teks){
        String sql = "SELECT * FROM produk WHERE nm_produk like '%" + teks + "%'";
        Object[] kolom = {"ID", "Nama Produk", "Harga", "Modal"};
        DefaultTableModel dataModel = new DefaultTableModel(null, kolom);
        tbProduk.setModel(dataModel);
        tbProduk.getColumnModel().getColumn(0).setMaxWidth(30);
        
        try{
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            
            while(rs.next()){
                int id = rs.getInt("id_produk");
                String nama = rs.getString("nm_produk");
                String harga = rs.getString("harga_produk");
                String modal = rs.getString("modal_produk");
                
                Object[] data={id, nama, harga, modal};
                dataModel.addRow(data);
            }
        } catch (SQLException e){
            System.out.println(e.getMessage());
        }
        
    }
}
